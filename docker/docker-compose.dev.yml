# 개발용 Docker Compose
# 애플리케이션 서비스들도 포함한 전체 환경

version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: webnovel-compass-db
    environment:
      POSTGRES_DB: webnovel_compass
      POSTGRES_USER: webnovel_user
      POSTGRES_PASSWORD: webnovel_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init:/docker-entrypoint-initdb.d
    networks:
      - webnovel-network
    restart: unless-stopped

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: webnovel-compass-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webnovel-network
    restart: unless-stopped

  # Spring Boot 백엔드 (나중에 활성화)
  # backend:
  #   build:
  #     context: ../backend
  #     dockerfile: Dockerfile
  #   container_name: webnovel-compass-backend
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/webnovel_compass
  #     - SPRING_DATASOURCE_USERNAME=webnovel_user
  #     - SPRING_DATASOURCE_PASSWORD=webnovel_password
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #   networks:
  #     - webnovel-network
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: unless-stopped

  # Python 추천 서비스 (나중에 활성화)
  # recommender:
  #   build:
  #     context: ../recommender
  #     dockerfile: Dockerfile
  #   container_name: webnovel-compass-recommender
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DATABASE_URL=postgresql://webnovel_user:webnovel_password@postgres:5432/webnovel_compass
  #     - REDIS_URL=redis://redis:6379
  #   networks:
  #     - webnovel-network
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: unless-stopped

  # React 프론트엔드 (나중에 활성화)
  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile
  #   container_name: webnovel-compass-frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8080
  #   networks:
  #     - webnovel-network
  #   depends_on:
  #     - backend
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  webnovel-network:
    driver: bridge
